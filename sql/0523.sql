--다중행 서브쿼리 (계속)
--EXISTS 연산자 - 서브쿼리에 결과가 있으면 TRUE 없으면 FALSE
SELECT DNAME FROM DEPT WHERE DEPTNO = 10;  -- 결과가 하나 존재하기 때문에 TRUE
--EXISTS 연산자에서 TRUE로 사용이 되면 앞에 SQL 문이 정상적으로 실행이 됨
SELECT * FROM EMP WHERE EXISTS (SELECT DNAME FROM DEPT WHERE DEPTNO = 10);
SELECT * FROM EMP;
SELECT DNAME FROM DEPT WHERE DEPTNO = 100;  -- 결과가 존재하지 않기 때문에 FALSE
--EXISTS 연산자에서 FALSE로 사용이 되면 앞에 SQL 문이 정상적으로 실행이 되지 않음 = 데이터 출력 없음
SELECT * FROM EMP WHERE EXISTS (SELECT DNAME FROM DEPT WHERE DEPTNO = 100);
--다중열 서브쿼리 = 열이 여러개 = 복수열 서브쿼리
--실무에서 꽤 많이 사용하므로 꼭 기억!
SELECT DEPTNO, MIN(SAL) FROM EMP GROUP BY DEPTNO;
SELECT * FROM EMP WHERE (DEPTNO, SAL) IN (SELECT DEPTNO, MIN(SAL) FROM EMP GROUP BY DEPTNO);
SELECT DEPTNO, MAX(SAL) FROM EMP GROUP BY DEPTNO;
SELECT * FROM EMP WHERE (DEPTNO, SAL) IN (SELECT DEPTNO, MAX(SAL) FROM EMP GROUP BY DEPTNO);
--FROM  절 뒤에 사용하는 서브쿼리
--인라인 뷰 = SQL 문 실행 결과를 마치 테이블처럼 사용 
SELECT * FROM EMP WHERE DEPTNO = 30;
SELECT * FROM DEPT;
SELECT  E30.EMPNO, E30.ENAME, D.DEPTNO, D.DNAME 
    FROM (SELECT * FROM EMP WHERE DEPTNO = 30) E30,
         (SELECT * FROM DEPT) D
    WHERE E30.DEPTNO = D.DEPTNO;
--인라인뷰에 사용하는 SQL문이 길어진다면 WITH 절 사용하면 됨
--가독성을 높이기 위한 목적
--WITH 절에서 미리 내용을 파악할 수 있음 => SELECT 문을 읽으면 도움이 됨
WITH E30 AS (SELECT * FROM EMP WHERE DEPTNO = 30),
     D AS (SELECT * FROM DEPT)
SELECT  E30.EMPNO, E30.ENAME, D.DEPTNO, D.DNAME 
    FROM () E30,
         () D
    WHERE E30.DEPTNO = D.DEPTNO;

